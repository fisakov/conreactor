package jetbrains.mps.logic.reactor.evaluation;

/*Generated by MPS */

import jetbrains.mps.logic.reactor.program.Rule;
import jetbrains.mps.logic.reactor.program.PredicateSymbol;
import jetbrains.mps.logic.reactor.program.Symbol;

public interface EvaluationTrace {

  public void activate(ConstraintOccurrence occurrence);

  public void reactivate(ConstraintOccurrence occurrence);

  public void suspend(ConstraintOccurrence occurrence);

  public void discard(ConstraintOccurrence occurrence);

  public void trigger(MatchRule matchRule);

  public void exit(Rule rule);

  public void askSuccess(PredicateSymbol predicateSymbol, Object... args);

  public void askFailure(PredicateSymbol predicateSymbol, Object... args);

  public void ask(PredicateSymbol predicateSymbol, Object... args);

  public void tell(Symbol symbol, Object... args);

  public void reportFailure(String message);

  public static final EvaluationTrace NULL = new EvaluationTrace() {

    public void activate(ConstraintOccurrence occurrence) {
    }
    public void reactivate(ConstraintOccurrence occurrence) {
    }
    public void suspend(ConstraintOccurrence occurrence) {
    }
    public void discard(ConstraintOccurrence occurrence) {
    }
    public void trigger(MatchRule matchRule) {
    }
    public void exit(Rule rule) {
    }
    public void askSuccess(PredicateSymbol predicateSymbol, Object... args) {
    }
    public void askFailure(PredicateSymbol predicateSymbol, Object... args) {
    }
    public void ask(PredicateSymbol predicateSymbol, Object... args) {
    }
    public void tell(Symbol symbol, Object... args) {
    }
    public void reportFailure(String message) {
    }
  };
}
