package jetbrains.mps.logic.reactor.program;

/*Generated by MPS */

import java.util.Collection;
import java.util.Collections;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.logic.reactor.logical.LogicalPattern;

public class AbstractConstraint implements Constraint {

  public AbstractConstraint(ConstraintSymbol constraintSymbol, Object... arguments) {
    this.symbol = constraintSymbol;
    this.arguments = arguments;
  }

  public ConstraintSymbol symbol() {
    return symbol;
  }

  public Collection<?> arguments() {
    return Collections.unmodifiableList(Arrays.asList(arguments));
  }

  public List<Class<?>> argumentTypes() {
    ArrayList<Class<?>> types = new ArrayList<Class<?>>(arguments.length);
    for (Object arg : arguments) {
      if (arg instanceof LogicalPattern) {
        types.add(((LogicalPattern) arg).type());
      } else {
        types.add(arg.getClass());
      }
    }
    return types;
  }

  private ConstraintSymbol symbol;
  private Object[] arguments;
}
