package jetbrains.mps.logic.reactor.constraint.occurrence;

/*Generated by MPS */

import jetbrains.mps.logic.reactor.constraint.ConstraintSymbol;

public class ConstraintOccurrence extends AbstractConstraintOccurrence {

  public static ConstraintOccurrence singleton(String id) {
    return new ConstraintOccurrence(ConstraintSymbol.symbol(id, 0));
  }

  public static ConstraintOccurrence unitary(String id, Object arg) {
    return new ConstraintOccurrence(ConstraintSymbol.symbol(id, 1), arg);
  }

  public static ConstraintOccurrence binary(String id, Object arg1, Object arg2) {
    return new ConstraintOccurrence(ConstraintSymbol.symbol(id, 2), arg1, arg2);
  }

  public static ConstraintOccurrence ternary(String id, Object arg1, Object arg2, Object arg3) {
    return new ConstraintOccurrence(ConstraintSymbol.symbol(id, 3), arg1, arg2, arg3);
  }

  public static ConstraintOccurrence nary(String id, Object... args) {
    return new ConstraintOccurrence(ConstraintSymbol.symbol(id, args.length), args);
  }

  @Override
  public ConstraintKind kind() {
    return ConstraintKind.USER;
  }

  private ConstraintOccurrence(ConstraintSymbol symbol, Object... args) {
    super(symbol, args);
  }

}
